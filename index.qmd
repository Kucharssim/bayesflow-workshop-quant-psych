---
title: "Welcome to the seminar!"
---

You can use this website to access materials related to the workshop.

## Schedule

| Day | Time | Topic |
|-----|------|-------|
| Wed | 9:00-10:30  | Introduction, Deep Learning |
| Wed | 11:00-12:30 | Deep Learning, Generative Neural Networks |
| Wed | 14:00-15:30 | Practical exercise |
| Wed | 16:00-17:30 | Amortized Bayesian Inference with BayesFlow |
| Thu | 9:00-10:30  | BayesFlow demonstration |
| Thu | 11:00-12:30 | Practical exercise |


## Slides

Here you can access the presentation slides

1. [Introduction](./slides/intro.qmd){target="_blank"}
2. [Deep Learning](./slides/deep-learning.qmd){target="_blank"}
3. [Generative Neural Networks](./slides/generative-architectures.qmd){target="_blank"}
4. [Amortized Bayesian Inference with BayesFlow](./slides/amortized-inference.qmd){target="_blank"}

## Exercises

Use the Exercises tab in the navigation bar to access exercise notebooks.

## Projects

Use the Projects tab in the navigation bar to access the project descriptions. See [https://quantitative-thinking.eu/mobilities/seminar-2025/](https://quantitative-thinking.eu/mobilities/seminar-2025/) for all projects.

## Environment

The exercises and projects require Python 3.10 -- 3.12, and installing necessary libraries. The recommended steps using [conda](https://docs.conda.io/en/latest/):

```{.bash filename="Terminal"}
# create a "bayesflow-seminar" conda environment with Python 3.11
conda create --name bayesflow-seminar python=3.11.11

# activate the environment
conda activate bayesflow-seminar

# kernel for running the jupyter notebooks
conda install ipykernel --update-deps --force-reinstall

# install packages
pip install tensorflow
pip install git+https://github.com/bayesflow-org/bayesflow@main

```

When running the exercise notebooks, remember to use the correct environment!

*Note:* `bayesflow` can run with `jax` or `pytorch` instead of `tensorflow`. If you prefer to use those as a backend, you can install them as well. Remember to set the correct environment before loading `keras`, e.g., `os.environ["KERAS_BACKEND"] = "jax"`. Note that the examples of [generative neural networks](exercises.qmd#generative-neural-networks) do require `tensorflow` regardless.

</br>

</br>

![](figures/tu-logo.svg){fig-align="center"}